syntax = "proto3";
package kratos.api;

option go_package = "area-service/internal/config;config";

import "google/protobuf/duration.proto";
import "google/protobuf/any.proto";
import "pkg/config/redis/config.proto";
import "pkg/config/logger/config.proto";

// Application 应用基础配置
message Application {
  bool debug = 1;
  string env = 2;
  string name = 3;
}

// Server 服务
message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

// Database 数据库配置
message Database {
  // DB 数据库配置
  message DB {
    // driver 连接驱动
    string driver = 1;
    // source 驱动dsn连接字符集
    string source = 2;
    // hostname 服务器地址
    string hostname = 3;
    // database 数据库名
    string database = 4;
    // username 数据库用户名
    string username = 5;
    // password 数据库密码
    string password = 6;
    // hostport 数据库连接端口
    string hostport = 7;
    // params 数据库连接参数
    map<string, google.protobuf.Any> params = 8;
    // charset 数据库编码默认采用utf8
    string charset = 9;
    // prefix 数据库表前缀
    string prefix = 10;
    // timeout 超时时间
    google.protobuf.Duration timeout = 11;
  }

  // default 默认使用的数据库
  string default = 1;
  // connections 连接配置项
  map<string, DB> connections = 2;
}

// FileSystem 文件系统，
message FileSystem {
  message Disk {
    // driver 驱动,可配置 local|oss|ucloud|qiniu等
    string driver = 1;
    // root 路径，默认为/
    string root = 2;
    // url 访问路径
    string url = 3;
    // params ...其他配置
    map<string, google.protobuf.Any> params = 4;
  }
  // default 默认使用的磁盘
  string default = 1;
  // disks 磁盘配置项
  map<string, Disk> disks = 2;
}

// Cache 缓存
message Cache {
  message Store {
    // driver 驱动
    string driver = 1;
    // driver_name 驱动名称
    string driver_name = 2;
    // params 额外参数配置
    map<string, google.protobuf.Any> params = 3;
  }
  // default 默认
  string default = 1;
  map<string, Store> stores = 2;
}

// Bootstrap 应用启动器
message Bootstrap {
  Application application = 1;
  Server server = 2;
  Database database = 3;
  FileSystem filesystem = 4;
  pkg.config.logger.Config logger = 5;
  Cache cache = 6;
  pkg.config.redis.Config redis = 7;
}

message Nacos {
  string server = 1;
  string username = 2;
  string password = 3;
  string dataId = 4;
  string group = 5;
}
