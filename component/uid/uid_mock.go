// Code generated by MockGen. DO NOT EDIT.
// Source: uid.go

// Package uid is a generated GoMock package.
package uid

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUid is a mock of Generator interface.
type MockUid struct {
	ctrl     *gomock.Controller
	recorder *MockUidMockRecorder
}

// MockUidMockRecorder is the mock recorder for MockUid.
type MockUidMockRecorder struct {
	mock *MockUid
}

// NewMockUid creates a new mock instance.
func NewMockUid(ctrl *gomock.Controller) *MockUid {
	mock := &MockUid{ctrl: ctrl}
	mock.recorder = &MockUidMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUid) EXPECT() *MockUidMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockUid) Generate(options ...Option) (string, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range options {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Generate", varargs...)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MockUidMockRecorder) Generate(options ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockUid)(nil).Generate), options...)
}
